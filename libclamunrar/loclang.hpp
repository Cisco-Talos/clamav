#define   MYesNo             L"_Yes_No"
#define   MYesNoAll          L"_Yes_No_All"
#define   MYesNoAllQ         L"_Yes_No_All_nEver_Quit"
#define   MYesNoAllRenQ      L"_Yes_No_All_nEver_Rename_Quit"
#define   MContinueQuit      L"_Continue_Quit"
#define   MRetryAbort        L"_Retry_Abort"
#define   MCopyright         L"\nRAR %s   Copyright (c) 1993-%d Alexander Roshal   %d %s %d"
#define   MRegTo             L"\nRegistered to %s\n"
#define   MShare             L"\nTrial version             Type 'rar -?' for help\n"
#define   MRegKeyWarning     L"\nAvailable license key is valid only for %s\n"
#define   MUCopyright        L"\nUNRAR %s freeware      Copyright (c) 1993-%d Alexander Roshal\n"
#define   MBeta              L"beta"
#define   Mx86               L"x86"
#define   Mx64               L"x64"
#define   MMonthJan          L"Jan"
#define   MMonthFeb          L"Feb"
#define   MMonthMar          L"Mar"
#define   MMonthApr          L"Apr"
#define   MMonthMay          L"May"
#define   MMonthJun          L"Jun"
#define   MMonthJul          L"Jul"
#define   MMonthAug          L"Aug"
#define   MMonthSep          L"Sep"
#define   MMonthOct          L"Oct"
#define   MMonthNov          L"Nov"
#define   MMonthDec          L"Dec"
#define   MRARTitle1         L"\nUsage:     rar <command> -<switch 1> -<switch N> <archive> <files...>"
#define   MUNRARTitle1       L"\nUsage:     unrar <command> -<switch 1> -<switch N> <archive> <files...>"
#define   MRARTitle2         L"\n               <@listfiles...> <path_to_extract\\>"
#define   MCHelpCmd          L"\n\n<Commands>"
#define   MCHelpCmdA         L"\n  a             Add files to archive"
#define   MCHelpCmdC         L"\n  c             Add archive comment"
#define   MCHelpCmdCH        L"\n  ch            Change archive parameters"
#define   MCHelpCmdCW        L"\n  cw            Write archive comment to file"
#define   MCHelpCmdD         L"\n  d             Delete files from archive"
#define   MCHelpCmdE         L"\n  e             Extract files without archived paths"
#define   MCHelpCmdF         L"\n  f             Freshen files in archive"
#define   MCHelpCmdI         L"\n  i[par]=<str>  Find string in archives"
#define   MCHelpCmdK         L"\n  k             Lock archive"
#define   MCHelpCmdL         L"\n  l[t[a],b]     List archive contents [technical[all], bare]"
#define   MCHelpCmdM         L"\n  m[f]          Move to archive [files only]"
#define   MCHelpCmdP         L"\n  p             Print file to stdout"
#define   MCHelpCmdR         L"\n  r             Repair archive"
#define   MCHelpCmdRC        L"\n  rc            Reconstruct missing volumes"
#define   MCHelpCmdRN        L"\n  rn            Rename archived files"
#define   MCHelpCmdRR        L"\n  rr[N]         Add data recovery record"
#define   MCHelpCmdRV        L"\n  rv[N]         Create recovery volumes"
#define   MCHelpCmdS         L"\n  s[name|-]     Convert archive to or from SFX"
#define   MCHelpCmdT         L"\n  t             Test archive files"
#define   MCHelpCmdU         L"\n  u             Update files in archive"
#define   MCHelpCmdV         L"\n  v[t[a],b]     Verbosely list archive contents [technical[all],bare]"
#define   MCHelpCmdX         L"\n  x             Extract files with full path"
#define   MCHelpSw           L"\n\n<Switches>"
#define   MCHelpSwm          L"\n  -             Stop switches scanning"
#define   MCHelpSwAT         L"\n  @[+]          Disable [enable] file lists"
#define   MCHelpSwAC         L"\n  ac            Clear Archive attribute after compression or extraction"
#define   MCHelpSwAD         L"\n  ad            Append archive name to destination path"
#define   MCHelpSwAG         L"\n  ag[format]    Generate archive name using the current date"
#define   MCHelpSwAI         L"\n  ai            Ignore file attributes"
#define   MCHelpSwAO         L"\n  ao            Add files with Archive attribute set"
#define   MCHelpSwAP         L"\n  ap<path>      Set path inside archive"
#define   MCHelpSwAS         L"\n  as            Synchronize archive contents"
#define   MCHelpSwCm         L"\n  c-            Disable comments show"
#define   MCHelpSwCFGm       L"\n  cfg-          Disable read configuration"
#define   MCHelpSwCL         L"\n  cl            Convert names to lower case"
#define   MCHelpSwCU         L"\n  cu            Convert names to upper case"
#define   MCHelpSwDF         L"\n  df            Delete files after archiving"
#define   MCHelpSwDH         L"\n  dh            Open shared files"
#define   MCHelpSwDR         L"\n  dr            Delete files to Recycle Bin"
#define   MCHelpSwDS         L"\n  ds            Disable name sort for solid archive"
#define   MCHelpSwDW         L"\n  dw            Wipe files after archiving"
#define   MCHelpSwEa         L"\n  e[+]<attr>    Set file exclude and include attributes"
#define   MCHelpSwED         L"\n  ed            Do not add empty directories"
#define   MCHelpSwEN         L"\n  en            Do not put 'end of archive' block"
#define   MCHelpSwEP         L"\n  ep            Exclude paths from names"
#define   MCHelpSwEP1        L"\n  ep1           Exclude base directory from names"
#define   MCHelpSwEP2        L"\n  ep2           Expand paths to full"
#define   MCHelpSwEP3        L"\n  ep3           Expand paths to full including the drive letter"
#define   MCHelpSwF          L"\n  f             Freshen files"
#define   MCHelpSwHP         L"\n  hp[password]  Encrypt both file data and headers"
#define   MCHelpSwHT         L"\n  ht[b|c]       Select hash type [BLAKE2,CRC32] for file checksum"
#define   MCHelpSwIDP        L"\n  id[c,d,p,q]   Disable messages"
#define   MCHelpSwIEML       L"\n  ieml[addr]    Send archive by email"
#define   MCHelpSwIERR       L"\n  ierr          Send all messages to stderr"
#define   MCHelpSwILOG       L"\n  ilog[name]    Log errors to file"
#define   MCHelpSwINUL       L"\n  inul          Disable all messages"
#define   MCHelpSwIOFF       L"\n  ioff[n]       Turn PC off after completing an operation"
#define   MCHelpSwISND       L"\n  isnd[-]       Control notification sounds"
#define   MCHelpSwIVER       L"\n  iver          Display the version number"
#define   MCHelpSwK          L"\n  k             Lock archive"
#define   MCHelpSwKB         L"\n  kb            Keep broken extracted files"
#define   MCHelpSwLog        L"\n  log[f][=name] Write names to log file"
#define   MCHelpSwMn         L"\n  m<0..5>       Set compression level (0-store...3-default...5-maximal)"
#define   MCHelpSwMA         L"\n  ma[4|5]       Specify a version of archiving format"
#define   MCHelpSwMC         L"\n  mc<par>       Set advanced compression parameters"
#define   MCHelpSwMD         L"\n  md<n>[k,m,g]  Dictionary size in KB, MB or GB"
#define   MCHelpSwMS         L"\n  ms[ext;ext]   Specify file types to store"
#define   MCHelpSwMT         L"\n  mt<threads>   Set the number of threads"
#define   MCHelpSwN          L"\n  n<file>       Additionally filter included files"
#define   MCHelpSwNa         L"\n  n@            Read additional filter masks from stdin"
#define   MCHelpSwNal        L"\n  n@<list>      Read additional filter masks from list file"
#define   MCHelpSwO          L"\n  o[+|-]        Set the overwrite mode"
#define   MCHelpSwOC         L"\n  oc            Set NTFS Compressed attribute"
#define   MCHelpSwOH         L"\n  oh            Save hard links as the link instead of the file"
#define   MCHelpSwOI         L"\n  oi[0-4][:min] Save identical files as references"
#define   MCHelpSwOL         L"\n  ol[a]         Process symbolic links as the link [absolute paths]"
#define   MCHelpSwONI        L"\n  oni           Allow potentially incompatible names"
#define   MCHelpSwOR         L"\n  or            Rename files automatically"
#define   MCHelpSwOS         L"\n  os            Save NTFS streams"
#define   MCHelpSwOW         L"\n  ow            Save or restore file owner and group"
#define   MCHelpSwP          L"\n  p[password]   Set password"
#define   MCHelpSwPm         L"\n  p-            Do not query password"
#define   MCHelpSwQO         L"\n  qo[-|+]       Add quick open information [none|force]"
#define   MCHelpSwR          L"\n  r             Recurse subdirectories"
#define   MCHelpSwRm         L"\n  r-            Disable recursion"
#define   MCHelpSwR0         L"\n  r0            Recurse subdirectories for wildcard names only"
#define   MCHelpSwRI         L"\n  ri<P>[:<S>]   Set priority (0-default,1-min..15-max) and sleep time in ms"
#define   MCHelpSwRR         L"\n  rr[N]         Add data recovery record"
#define   MCHelpSwRV         L"\n  rv[N]         Create recovery volumes"
#define   MCHelpSwS          L"\n  s[<N>,v[-],e] Create solid archive"
#define   MCHelpSwSm         L"\n  s-            Disable solid archiving"
#define   MCHelpSwSC         L"\n  sc<chr>[obj]  Specify the character set"
#define   MCHelpSwSFX        L"\n  sfx[name]     Create SFX archive"
#define   MCHelpSwSI         L"\n  si[name]      Read data from standard input (stdin)"
#define   MCHelpSwSL         L"\n  sl<size>      Process files with size less than specified"
#define   MCHelpSwSM         L"\n  sm<size>      Process files with size more than specified"
#define   MCHelpSwT          L"\n  t             Test files after archiving"
#define   MCHelpSwTK         L"\n  tk            Keep original archive time"
#define   MCHelpSwTL         L"\n  tl            Set archive time to latest file"
#define   MCHelpSwTN         L"\n  tn[mcao]<t>   Process files newer than <t> time"
#define   MCHelpSwTO         L"\n  to[mcao]<t>   Process files older than <t> time"
#define   MCHelpSwTA         L"\n  ta[mcao]<d>   Process files modified after <d> YYYYMMDDHHMMSS date"
#define   MCHelpSwTB         L"\n  tb[mcao]<d>   Process files modified before <d> YYYYMMDDHHMMSS date"
#define   MCHelpSwTS         L"\n  ts[m,c,a,p]   Save or restore time (modification, creation, access, preserve)"
#define   MCHelpSwU          L"\n  u             Update files"
#define   MCHelpSwV          L"\n  v             Create volumes with size autodetection or list all volumes"
#define   MCHelpSwVUnr       L"\n  v             List all volumes"
#define   MCHelpSwVn         L"\n  v<size>[k,b]  Create volumes with size=<size>*1000 [*1024, *1]"
#define   MCHelpSwVD         L"\n  vd            Erase disk contents before creating volume"
#define   MCHelpSwVER        L"\n  ver[n]        File version control"
#define   MCHelpSwVN         L"\n  vn            Use the old style volume naming scheme"
#define   MCHelpSwVP         L"\n  vp            Pause before each volume"
#define   MCHelpSwW          L"\n  w<path>       Assign work directory"
#define   MCHelpSwX          L"\n  x<file>       Exclude specified file"
#define   MCHelpSwXa         L"\n  x@            Read file names to exclude from stdin"
#define   MCHelpSwXal        L"\n  x@<list>      Exclude files listed in specified list file"
#define   MCHelpSwY          L"\n  y             Assume Yes on all queries"
#define   MCHelpSwZ          L"\n  z[file]       Read archive comment from file"
#define   MBadArc            L"\nERROR: Bad archive %s\n"
#define   MAskPsw            L"Enter password (will not be echoed)"
#define   MAskPswFor         L"\nEnter password (will not be echoed) for %s: "
#define   MReAskPsw          L"\nReenter password: "
#define   MNotMatchPsw       L"\nERROR: Passwords do not match\n"
#define   MErrWrite          L"Write error in the file %s"
#define   MErrRead           L"Read error in the file %s"
#define   MErrSeek           L"Seek error in the file %s"
#define   MErrFClose         L"Cannot close the file %s"
#define   MErrOutMem         L"Not enough memory"
#define   MErrBrokenArc      L"Corrupt archive - use 'Repair' command"
#define   MProgAborted       L"Program aborted"
#define   MErrRename         L"\nCannot rename %s to %s"
#define   MAbsNextVol        L"\nCannot find volume %s"
#define   MBreak             L"\nUser break\n"
#define   MAskCreatVol       L"\nCreate next volume ?"
#define   MAskNextDisk       L"\nDisk full. Insert next"
#define   MCreatVol          L"\n\nCreating %sarchive %s\n"
#define   MAskNextVol        L"\nInsert disk with %s"
#define   MTestVol           L"\n\nTesting archive %s\n"
#define   MExtrVol           L"\n\nExtracting from %s\n"
#define   MConverting        L"\nConverting %s"
#define   MCvtToSFX          L"\nConvert archives to SFX"
#define   MCvtFromSFX        L"\nRemoving SFX module"
#define   MNotSFX            L"\n%s is not SFX archive"
#define   MNotRAR            L"\n%s is not RAR archive"
#define   MNotFirstVol       L"\n%s is not the first volume"
#define   MCvtOldFormat      L"\n%s - cannot convert to SFX archive with old format"
#define   MCannotCreate      L"\nCannot create %s"
#define   MCannotOpen        L"\nCannot open %s"
#define   MUnknownMeth       L"\nUnknown method in %s"
#define   MNewRarFormat      L"\nUnsupported archive format. Please update RAR to a newer version."
#define   MOk                L" OK"
#define   MDone              L"\nDone"
#define   MLockingArc        L"\nLocking archive"
#define   MNotMdfOld         L"\n\nERROR: Cannot modify old format archive"
#define   MNotMdfLock        L"\n\nERROR: Locked archive"
#define   MNotMdfVol         L"\n\nERROR: Cannot modify volume"
#define   MPackAskReg        L"\nEvaluation copy. Please register.\n"
#define   MCreateArchive     L"\nCreating %sarchive %s\n"
#define   MUpdateArchive     L"\nUpdating %sarchive %s\n"
#define   MAddSolid          L"solid "
#define   MAddFile           L"\nAdding    %-58s     "
#define   MUpdFile           L"\nUpdating  %-58s     "
#define   MAddPoints         L"\n...       %-58s     "
#define   MMoveDelFiles      L"\n\nDeleting files %s..."
#define   MMoveDelDirs       L"and directories"
#define   MMoveDelFile       L"\nDeleting %-30s"
#define   MMoveDeleted       L"    deleted"
#define   MMoveNotDeleted    L"    NOT DELETED"
#define   MClearAttrib       L"\n\nClearing attributes..."
#define   MMoveDelDir        L"\nDeleting directory %-30s"
#define   MWarErrFOpen       L"\nWARNING: Cannot open %d %s"
#define   MErrOpenFiles      L"files"
#define   MErrOpenFile       L"file"
#define   MAddNoFiles        L"\nWARNING: No files"
#define   MMdfEncrSol        L"\n%s: encrypted"
#define   MAddAnalyze        L"\nAnalyzing archived files: "
#define   MRepacking         L"\nRepacking archived files: "
#define   MCRCFailed         L"\n%-20s - checksum error"
#define   MExtrTest          L"\n\nTesting archive %s\n"
#define   MExtracting        L"\n\nExtracting from %s\n"
#define   MUseCurPsw         L"\n%s - use current password ?"
#define   MCreatDir          L"\nCreating    %-56s"
#define   MExtrSkipFile      L"\nSkipping    %-56s"
#define   MExtrTestFile      L"\nTesting     %-56s"
#define   MExtrFile          L"\nExtracting  %-56s"
#define   MExtrPoints        L"\n...         %-56s"
#define   MExtrErrMkDir      L"\nCannot create directory %s"
#define   MExtrPrinting      L"\n------ Printing %s\n\n"
#define   MEncrBadCRC        L"\nChecksum error in the encrypted file %s. Corrupt file or wrong password."
#define   MExtrNoFiles       L"\nNo files to extract"
#define   MExtrAllOk         L"\nAll OK"
#define   MExtrTotalErr      L"\nTotal errors: %ld"
#define   MAskReplace        L"\n\nWould you like to replace the existing file %s\n%6s bytes, modified on %s\nwith a new one\n%6s bytes, modified on %s\n"
#define   MAskOverwrite      L"\nOverwrite %s ?"
#define   MAskNewName        L"\nEnter new name: "
#define   MHeaderBroken      L"\nCorrupt header is found"
#define   MMainHeaderBroken  L"\nMain archive header is corrupt"
#define   MLogFileHead       L"\n%s - the file header is corrupt"
#define   MLogProtectHead    L"The data recovery header is corrupt"
#define   MReadStdinCmt      L"\nReading comment from stdin\n"
#define   MReadCommFrom      L"\nReading comment from %s"
#define   MDelComment        L"\nDeleting comment from %s"
#define   MAddComment        L"\nAdding comment to %s"
#define   MFCommAdd          L"\nAdding file comments"
#define   MAskFComm          L"\n\nReading comment for %s : %s from stdin\n"
#define   MLogCommBrk        L"\nThe archive comment is corrupt"
#define   MCommAskCont       L"\nPress 'Enter' to continue or 'Q' to quit:"
#define   MWriteCommTo       L"\nWrite comment to %s"
#define   MCommNotPres       L"\nComment is not present"
#define   MDelFrom           L"\nDeleting from %s"
#define   MDeleting          L"\nDeleting %s"
#define   MEraseArc          L"\nErasing empty archive %s"
#define   MNoDelFiles        L"\nNo files to delete"
#define   MLogTitle          L"--------  %2d %s %d, archive %s"
#define   MPathTooLong       L"\nERROR: Path too long\n"
#define   MListArchive       L"Archive"
#define   MListDetails       L"Details"
#define   MListSolid         L"solid"
#define   MListSFX           L"SFX"
#define   MListVolume        L"volume"
#define   MListRR            L"recovery record"
#define   MListLock          L"lock"
#define   MListEnc           L"encrypted"
#define   MListEncHead       L"encrypted headers"
#define   MListTitleL        L" Attributes      Size     Date    Time   Name"
#define   MListTitleV        L" Attributes      Size    Packed Ratio    Date    Time   Checksum  Name"
#define   MListName          L"Name"
#define   MListType          L"Type"
#define   MListFile          L"File"
#define   MListDir           L"Directory"
#define   MListUSymlink      L"Unix symbolic link"
#define   MListWSymlink      L"Windows symbolic link"
#define   MListJunction      L"NTFS junction point"
#define   MListHardlink      L"Hard link"
#define   MListCopy          L"File reference"
#define   MListStream        L"NTFS alternate data stream"
#define   MListTarget        L"Target"
#define   MListSize          L"Size"
#define   MListPacked        L"Packed size"
#define   MListRatio         L"Ratio"
#define   MListMtime         L"mtime"
#define   MListCtime         L"ctime"
#define   MListAtime         L"atime"
#define   MListAttr          L"Attributes"
#define   MListFlags         L"Flags"
#define   MListCompInfo      L"Compression"
#define   MListHostOS        L"Host OS"
#define   MListFileVer       L"File version"
#define   MListService       L"Service"
#define   MListUOHead        L"\n   Unix Owner/Group data:    %-14s %-14s"
#define   MListNTACLHead     L"\n   NTFS security data"
#define   MListStrmHead      L"\n   NTFS stream: %s"
#define   MListUnkHead       L"\n   Unknown subheader type: 0x%04x"
#define   MFileComment       L"\nComment: "
#define   MYes               L"Yes"
#define   MNo                L"No"
#define   MListNoFiles       L"  0 files\n"
#define   MRprReconstr       L"\nReconstructing %s"
#define   MRprBuild          L"\nBuilding %s"
#define   MRprOldFormat      L"\nCannot repair archive with old format"
#define   MRprFind           L"\nFound  %s"
#define   MRprAskIsSol       L"\nThe archive header is corrupt. Mark archive as solid ?"
#define   MRprNoFiles        L"\nNo files found"
#define   MLogUnexpEOF       L"\nUnexpected end of archive"
#define   MRepAskReconst     L"\nReconstruct archive structure ?"
#define   MRRSearch          L"\nSearching for recovery record"
#define   MAnalyzeFileData   L"\nAnalyzing file data"
#define   MRecRNotFound      L"\nData recovery record not found"
#define   MRecRFound         L"\nData recovery record found"
#define   MRecSecDamage      L"\nSector %ld (offsets %lX...%lX) damaged"
#define   MRecCorrected      L" - data recovered"
#define   MRecFailed         L" - cannot recover data"
#define   MAddRecRec         L"\nAdding data recovery record"
#define   MEraseForVolume    L"\n\nErasing contents of drive %c:\n"
#define   MGetOwnersError    L"\nWARNING: Cannot get %s owner and group\n"
#define   MErrGetOwnerID     L"\nWARNING: Cannot get owner %s ID\n"
#define   MErrGetGroupID     L"\nWARNING: Cannot get group %s ID\n"
#define   MOwnersBroken      L"\nERROR: %s group and owner data are corrupt\n"
#define   MSetOwnersError    L"\nWARNING: Cannot set %s owner and group\n"
#define   MErrLnkRead        L"\nWARNING: Cannot read symbolic link %s"
#define   MSymLinkExists     L"\nWARNING: Symbolic link %s already exists"
#define   MAskRetryCreate    L"\nCannot create %s. Retry ?"
#define   MDataBadCRC        L"\n%-20s : packed data checksum error in volume %s"
#define   MFileRO            L"\n%s is read-only"
#define   MACLGetError       L"\nWARNING: Cannot get %s security data\n"
#define   MACLSetError       L"\nWARNING: Cannot set %s security data\n"
#define   MACLBroken         L"\nERROR: %s security data are corrupt\n"
#define   MACLUnknown        L"\nWARNING: Unknown format of %s security data\n"
#define   MStreamBroken      L"\nERROR: %s stream data are corrupt\n"
#define   MStreamUnknown     L"\nWARNING: Unknown format of %s stream data\n"
#define   MInvalidName       L"\nERROR: Invalid file name %s"
#define   MProcessArc        L"\n\nProcessing archive %s"
#define   MCorrectingName    L"\nWARNING: Attempting to correct the invalid file name"
#define   MUnpCannotMerge    L"\nWARNING: You need to start extraction from a previous volume to unpack %s"
#define   MUnknownOption     L"\nERROR: Unknown option: %s"
#define   MSubHeadCorrupt    L"\nERROR: Corrupt data header found, ignored"
#define   MSubHeadUnknown    L"\nWARNING: Unknown data header format, ignored"
#define   MSubHeadDataCRC    L"\nERROR: Corrupt %s data block"
#define   MSubHeadType       L"\nData header type: %s"
#define   MScanError         L"\nCannot read contents of %s"
#define   MNotVolume         L"\n%s is not volume"
#define   MRecVolDiffSets    L"\nERROR: %s and %s belong to different sets"
#define   MRecVolMissing     L"\n%d volumes missing"
#define   MRecVolFound       L"\n%d recovery volumes found"
#define   MRecVolAllExist    L"\nNothing to reconstruct"
#define   MRecVolCannotFix   L"\nReconstruction impossible"
#define   MReconstructing    L"\nReconstructing..."
#define   MCreating          L"\nCreating %s"
#define   MRenaming          L"\nRenaming %s to %s"
#define   MNTFSRequired      L"\nWrite error: only NTFS file system supports files larger than 4 GB"
#define   MFAT32Size         L"\nWARNING: FAT32 file system does not support 4 GB or larger files"
#define   MErrChangeAttr     L"\nWARNING: Cannot change attributes of %s"
#define   MWrongSFXVer       L"\nERROR: default SFX module does not support RAR %d.%d archives"
#define   MHeadEncMismatch   L"\nCannot change the header encryption mode in already encrypted archive"
#define   MCannotEmail       L"\nCannot email the file %s"
#define   MCopyrightS        L"\nRAR SFX archive" 
#define   MSHelpCmd          L"\n\n<Commands>" 
#define   MSHelpCmdE         L"\n  -x      Extract from archive (default)" 
#define   MSHelpCmdT         L"\n  -t      Test archive files" 
#define   MSHelpCmdV         L"\n  -v      Verbosely list contents of archive" 
#define   MRecVolLimit       L"\nTotal number of usual and recovery volumes must not exceed %d"
#define   MVolumeNumber      L"volume %d"
#define   MCannotDelete      L"\nCannot delete %s"
#define   MRecycleFailed     L"\nCannot move some files and folders to Recycle Bin"
#define   MCalcCRC           L"\nCalculating the checksum"
#define   MTooLargeSFXArc    L"\nToo large SFX archive. Windows cannot run the executable file exceeding 4 GB."
#define   MCalcCRCAllVol     L"\nCalculating checksums of all volumes."
#define   MNotEnoughDisk     L"\nERROR: Not enough disk space for %s."
#define   MNewerRAR          L"\nYou may need a newer version of RAR."
#define   MUnkEncMethod      L"\nUnknown encryption method in %s"
#define   MWrongPassword     L"\nThe specified password is incorrect."
#define   MWrongFilePassword L"\nIncorrect password for %s"
#define   MAreaDamaged       L"\nCorrupt %d bytes at %08x %08x"
#define   MBlocksRecovered   L"\n%u blocks are recovered, %u blocks are relocated"
#define   MRRDamaged         L"\nRecovery record is corrupt."
#define   MTestingRR         L"\nTesting the recovery record"
#define   MFailed            L"Failed"
#define   MIncompatSwitch    L"\n%s switch is not supported for RAR %d.x archive format."
#define   MSearchDupFiles    L"\nSearching for identical files"
#define   MNumFound          L"%d found."
#define   MUnknownExtra      L"\nUnknown extra field in %s."
#define   MCorruptExtra      L"\nCorrupt %s extra field in %s."
#define   MCopyError         L"\nCannot copy %s to %s."
#define   MCopyErrorHint     L"\nYou need to unpack the entire archive to create file reference entries."
#define   MCopyingData       L"\nCopying data"
#define   MErrCreateLnkS     L"\nCannot create symbolic link %s"
#define   MErrCreateLnkH     L"\nCannot create hard link %s"
#define   MErrLnkTarget      L"\nYou need to unpack the link target first"
#define   MNeedAdmin         L"\nYou may need to run RAR as administrator"
#define   MDictOutMem        L"\nNot enough memory for %d MB compression dictionary, changed to %d MB."
#define   MUseSmalllerDict   L"\nPlease use a smaller compression dictionary."
#define   MOpenErrAtime      L"\nYou may need to remove -tsp switch to open this file."
